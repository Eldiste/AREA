[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aera"
description = "AREA project for epitech"
readme = "README.md"
license = { file = "LICENSE.txt" }
authors = [
    { name = "1yam", email = "lyam.gomes@epitech.eu" },
    { name = "Barthelemy", email = "Barthelemy.villard@epitech.eu"},
    { name = "Mateo", email = "mateo.lechantre@epitech.eu"},
    { name = "Dorian", email = "dorian.senecot@epitech.eu"},
    { name = "Lucas", email = "lucas.debize@epitech.eu"}

]
requires-python = ">=3.12,<3.13.2"
classifiers = [
    "Programming Language :: Python :: 3.12",
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
]
dependencies = [
    "fastapi>=0.115.0",
    "asyncpg>=0.30.0",
    "psycopg2-binary>=2.9.0",
    "sqlalchemy>=2.0.0",
    "pydantic>=2.10.0",
    "pydantic-settings>=2.6.1",
    "uvicorn>=0.32.0",
    "python-dotenv>=1.0.0",
    "alembic>=1.12.0",
    "redis[asyncio]",
    "aiohttp",
    "email-validator",
    "passlib",
    "python-jose>=3.3.0",
    "authlib>=1.3.0",
    "python-multipart>=0.0.5",     # For handling form data in authentication
    "pycryptodome>=3.10.1",         # For cryptographic operations
    "itsdangerous>=2.0.0",
    "httpx>=0.25.0",
    "websockets>=10.0",
    "bcrypt>=4.0.0",
]



version = "0.0.0"  # Placeholder version

[tool.setuptools.packages]
find = {}

[tool.isort]
profile = "black"

[tool.mypy]
plugins = ['pydantic.mypy']
python_version = 3.12
mypy_path = "src"
strict = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_no_return = true
disable_error_code = ['misc']

[tool.black]
line-length = 88
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
pythonpath = ["src"]
addopts = "--strict-markers -v"
testpaths = ["tests"]

[tool.hatch.envs.linting]
detached = true
dependencies = [
    "black==24.2.0",
    "mypy==1.2.0",
    "mypy-extensions==1.0.0",
    "isort==5.13.2",
    "sqlalchemy[mypy]==1.4.41",
    "yamlfix",
    "pydantic>=2.10.0",
]

[tool.hatch.envs.linting.scripts]
typing = "mypy --config-file=pyproject.toml {args:} ./src/ ./tests/"
style = [
  "black --check --diff {args:} ./src/ ./tests/",
  "isort --check-only --profile black {args:} ./src/ ./tests/",
  "yamlfix --check .",
]
fmt = [
  "black {args:} ./src/ ./tests/",
  "isort --profile black {args:} ./src/ ./tests/",
  "yamlfix .",
  "style",
]
all = [
  "style",
]

[tool.hatch.envs.testing]
description = "Environment for running tests"
dependencies = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
]
scripts.test = "pytest tests"
scripts.test_cov = "pytest --cov=src --cov-report=term-missing tests"

[tool.hatch.envs.run]
description = "Run FastAPI app with uvicorn"
dependencies = ["uvicorn"]
scripts.run = "uvicorn src.web.controllers.main:app --reload"
